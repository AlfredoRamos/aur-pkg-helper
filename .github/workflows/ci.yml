name: CI

on:
  push:
    branches: [main, dev]
  pull_request: {}

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24.6'

      - name: Install dependencies
        run: go mod tidy

      - name: Build app
        run: make build

  security:
    if: ${{ !contains(github.event.head_commit.message, 'skip security') }}
    name: Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24.6'

      - name: Install dependencies
        run: go mod tidy

      - name: Install utils
        run: make utils

      - name: Check source
        run: govulncheck -show=traces ./...

      - name: Check binary
        run: make lint-bin

      - name: Security scanner
        # Fix Go version detection
        env:
          GOTOOLCHAIN: auto
        uses: securego/gosec@master
        with:
          args: ./...

  lint:
    if: ${{ !contains(github.event.head_commit.message, 'skip lint') }}
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24.6'

      - name: Install utils
        run: make utils

      - name: Lint with vet
        run: go vet ./...

      - name: Lint with golangci-lint
        run: golangci-lint run ./...

      - name: Lint with deadcode
        run: deadcode -test ./...

      - name: Lint with modernize
        run: modernize -test ./...
